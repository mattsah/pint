%{
	#include "tree.h"

	using namespace pint;
	using Value = std::shared_ptr<Expr>;
%}

%%

code
	: {
		$$ = std::make_shared<Expr>();
	}
	| unit_expr header_expr {
		$$ = std::make_shared<Expr>();
	}
;

unit_expr
	: UNIT IDENTIFIER SEMICOLON {
		$$ = std::make_shared<UnitExpr>($2);
	}
;

header_expr
	: {
		$$ = std::make_shared<Expr>();
	}
	| comment header_expr {
		$$ = std::make_shared<Expr>();
	}
	| uses_expr header_expr {
		$$ = std::make_shared<Expr>();
	}
;

comment
	: COMMENT {
		$$ = std::make_shared<Expr>();
		printf("Comment Found\n");
	}
;

uses_expr
	: USES ilist SEMICOLON {
		$$ = std::make_shared<UsesExpr>($2);
		printf("Uses Found\n");
	}
;

identifier_expr
	: IDENTIFIER {
		$$ = std::make_shared<IdentifierExpr>($1);
	}
;

identifier_list_expr
	: identifier_expr {
		$$ = std::make_shared<IdentifierListExpr>($1);
	}
	| identifier_list_expr ',' identifier_expr {
		$1->list.push_back($3);
		$$ = $1;
	}
;

number
	: INT {
		$$ = std::make_shared<Expr>();
	}
	| FLOAT {
		$$ = std::make_shared<Expr>();
	}
;

garbage
	: STRING BOOL BEGIN CONST VAR IF THEN ELSE CASE IS END {
		$$ = std::make_shared<Expr>();
	}
;